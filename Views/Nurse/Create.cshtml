@model E_PRESCRIBING_SYSTEM.Models.AdmissionPageViewModel


@{
    ViewBag.Title = "Manage Admissions";
    Layout = "~/Views/Shared/_NurseLayout.cshtml";
}

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        .tab-container {
            margin-top: 40px;
        }

        .tabs {
            display: flex;
            cursor: pointer;
            border-bottom: 2px solid #ccc;
        }

        .tab {
            padding: 10px 20px;
            border: 1px solid #ccc;
            border-bottom: none;
            background-color: #f8f9fa;
            margin-right: 5px;
        }

            .tab.active {
                background-color: #fff;
                font-weight: bold;
            }

        .tab-content {
            display: none;
            padding: 20px;
            background-color: #fff;
            border: 1px solid #ccc;
        }

            .tab-content.active {
                display: block;
            }
    </style>
</head>

<div class="tab-container">
    <div class="tabs">
        <div class="tab active" onclick="showTab(event, 'createAdmissionTab')"><i class="fas fa-hospital-user me-1"></i> Create Admission</div>
        <div class="tab" onclick="showTab(event, 'viewAdmissionsTab')"><i class="fas fa-list me-1"></i> View Admissions</div>
    </div>

    <div id="viewAdmissionsTab" class="tab-content">

        <h2>Admission List</h2>
       
        @* 
<a asp-action="Create" asp-controller="Surgery">Surgeon Surgery</a> *@
        <br />
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Patient Name</th>
                    <th>Ward Name</th>
                    <th>Height (cm)</th>
                    <th>Weight (kg)</th>
                    <th>Status</th>
                    <th>Date</th>
                    <th>Added By</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var admission in Model.Admissions)
                {
                    <tr>
                        <td>@admission.PatientProfile?.PatientName</td>
                        <td>@admission.WardID</td>
                        <td>@admission.height</td>
                        <td>@admission.weight</td>
                        <td>@admission.status</td>
                        <td>@admission.Date.ToShortDateString()</td>
                        <td>@admission.Username</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@admission.AdmissionId" class="btn btn-info">Details</a>
                        </td>
                    </tr>
                }

            </tbody>
        </table>

        <div>
            <a href="@Url.Action("Create", "Admissions")" class="btn btn-primary">Add New Admission</a>
        </div>
</div>

    <!-- Create Admission Form -->
    <div id="createAdmissionTab" class="tab-content active">
        <h4><i class="fas fa-bed me-2"></i>New Patient Admission</h4>

        @using (Html.BeginForm("Create", "Nurse", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label">Select Patient</label>
                    @Html.DropDownListFor(model => model.NewAdmission.PatientProfileId, (SelectList)ViewBag.PatientProfiles, "-- Select Patient --", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.NewAdmission.PatientProfileId, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6">
                    <label class="form-label">Select Ward</label>
                    @Html.DropDownListFor(model => model.NewAdmission.WardID, (SelectList)ViewBag.Wards, "-- Select Ward --", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.NewAdmission.WardID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label">Height (cm)</label>
                    @Html.TextBoxFor(model => model.NewAdmission.height, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NewAdmission.height, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6">
                    <label class="form-label">Weight (kg)</label>
                    @Html.TextBoxFor(model => model.NewAdmission.weight, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NewAdmission.weight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label">Status</label>
                @Html.DropDownListFor(model => model.NewAdmission.status, new SelectList(new[] { "Admitted", "Discharged" }), new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.NewAdmission.status, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="btn btn-primary w-100">
                <i class="fas fa-save me-1"></i> Submit Admission
            </button>
        }

    </div>

    <!-- Placeholder View Tab -->
    <div id="viewAdmissionsTab" class="tab-content">
        <h4><i class="fas fa-list me-2"></i>Admission Records</h4>
        <p>This tab can be populated with a table of admissions.</p>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function showTab(event, tabId) {
            const tabs = document.querySelectorAll('.tab');
            const contents = document.querySelectorAll('.tab-content');

            tabs.forEach(tab => tab.classList.remove('active'));
            contents.forEach(content => content.classList.remove('active'));

            document.getElementById(tabId).classList.add('active');
            event.currentTarget.classList.add('active');
        }
    </script>
}
